geom_line()
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
world_map = map_data("world")
ggplot(world_map, aes(x = long, y = lat)) +
geom_point()
ggplot(world_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
lebanon = map_data("world")
lebanon = map_data("world", region  = "Lebanon")
lebanon
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
lebanon = map_data("world", region  = "Indonesia")
lebanon
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
lebanon = map_data("world", region  = "Lebanon")
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
far_east = map_data("world", region  = c("Japan", "China", "North Korea", "South Korea")
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
far_east = map_data("world", region  = c("Japan", "China", "North Korea", "South Korea")
far_east = map_data("world", region  = c("Japan", "China", "North Korea", "South Korea"))
far_east = map_data("world", region  =
c("Japan", "China"))
far_east = map_data("world", region  =
c("Japan", "China", "North Korea"))
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
far_east = map_data("world", region  =
c("Japan", "China", "North Korea", "South Korea"))
far_east = map_data("world", region  =
c("Japan", "China", "North Korea", "South Korea"))
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
countries = world_map$region
countries
world_map = map_data("world")
countries = world_map %>% distinct(region)
countries
countries = world_map %>% distinct(region) %>% arrange(region)
countries
countries
USAccDeaths
?USAccDeaths
head(USArrests)
head(?USArrests)
?USArrests
head(USArrests)
summary(USArrests)
ncol(USArrests)
head(USArrests)
ncol(USArrests)
ncol(USArrests)[1]
ncol(USArrests)[2]
colnames(USArrests)[2]
colnames(USArrests)[1]
colnames(USArrests)[5]
colnames(USArrests)[5]  =
colnames(USArrests)[5]
colnames(USArrests)[5]
colnames(USArrests)[5]  = "State"
rownames(USArrests)
USArrests%State = rownames(USArrests)
USArrests$State = rownames(USArrests)
head(USArrests)
head(USArrests)
crimes = USArrests
crime$State = rownames(USArrests)
crimes$State = rownames(USArrests)
crimes
ggplot(crimes, aes(x = states,)) + geom_polygon()
ggplot(crimes, aes(x = states)) + geom_polygon()
# Create maps for the usa and the world
library(maps)
library(ggplot2)
# the maps package has information about countries state, counties etc
states_map = map_data("state")
library(dplyr)
glimpse(states_map)
# levels(as.factor(states_map$region))
# a = states_map %>% filter(region ==  "missouri")
states_map = map_data("state")
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
# map of the world
world_map = map_data("world")
ggplot(world_map, aes(x = long, y = lat)) +
geom_point()
ggplot(world_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
# the map_data function can take the following
# world, nz, france, italy, usa, state, county
# get the map for lebanon
lebanon = map_data("world", region  = "Lebanon")
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
# get the map for far east
far_east = map_data("world", region  =
c("Japan", "China", "North Korea", "South Korea"))
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
# get all country names
world_map = map_data("world")
countries = world_map %>% distinct(region) %>% arrange(region)
states_map = map_data("state")
View(states_map)
View(states_map)
View(crimes)
View(crimes)
crimes_map = merge(states_map, crime, by.x = region, by.y = states)
crimes_map = merge(states_map, crimes, by.x = region, by.y = states)
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "states") #key for 2nd dataframe
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "states") #key for 2nd dataframe
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "States") #key for 2nd dataframe
crimes
head(USArrests)
crimes = USArrests
crimes
crimes$State = rownames(USArrests)
crimes$State
crimes
tolower(crimes$State)
crimes$State = tolower(crimes$State)
crimes
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "States") #key for 2nd dataframe
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "State") #key for 2nd dataframe
glimpse(crimes_map)
crimes
glimpse(crimes_map)
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black"))
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
glimpse(crimes_map)
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, color = Murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, color = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon( color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "blue")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
coord_map("polyconic")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red") +
coord_map("polyconic")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red") +
coord_map("polyconic")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red") +
coord_map("polyconic") +
theme_void()
library(ggmap)
library(maps)
library(ggplot2)
library(dplyr)
USC = "University of Southern California Los Angeles"
USC_map = get_map(location = USC)
USC_map
ggmap(USC_map)
library(dplyr)
library(ggplot2)
library(dplyr)
install.packages("dplyr")
library(dplyr)
setwd("C:/Users/dan_9/Desktop/DSO 545/MIDTERM")
library(ggplot2)
library(dplyr)
C3 = read.csv("Case_03.csv")
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q1 = C3 %>% filter(Sequel == "Yes" & Opening > 10000 & Opening < 15000 )
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
?summarise
summarise(mtcars, mean(disp))
summarise(mtcars, mean(disp))
mtcars
attach(mtcars)
summarise(mtcars, mean(disp))
summarise(mtcars, mean(disp))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
summarise(AverageRank = mean(Rank), NumberOfMovies = n() )
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
data = tbl_df(hflights)
colnames(data)
d = arrange(data,UniqueCarrier, desc(DepDelay))
library(dplyr)
library(hflights)
data = tbl_df(hflights)
colnames(data)
d = arrange(data,UniqueCarrier, desc(DepDelay))
arrange(data, (ArrDelay + DepDelay))
mut_data = mutate(data, totalDelay = ArrDelay + DepDelay)
colnames(mut_data)
g = arrange(mut_data, totalDelay)
# or using pipeline method
h = data %>% mutate(TotalDelay = ArrDelay + DepDelay) %>% arrange(TotalDelay)
#14.
# filter out flights leaving to  DFW before 8AM  and arrange according to decrease airtime
table(data$Dest)
data %>% filter( Dest == "DFW", DepTime <800 ) %>% arrange(desc(AirTime))
# 15
# determine the shortest and longesst distance flown and save statistic to min_dist and max_dist resp
data %>% summarise(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarise(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarise(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarise(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarise(min_dist = min(Distance), max_dist = max(Distance))
#16
data %>% summarise_(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarize(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarise(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarise_(min_dist = min(Distance), max_dist = max(Distance))
data %>% summarize(min_dist = min(Distance), max_dist = max(Distance))
setwd("C:/Users/dan_9/Desktop/DSO 545/MIDTERM")
library(ggplot2)
library(dplyr)
C3 = read.csv("Case_03.csv")
glimpse(C3)
# Q1
Q1 = C3 %>% filter(Sequel == "Yes" & Opening > 10000 & Opening < 15000 )
# Rank                                     Movie  Opening    Gross   Genre Sequel
# 1   29                    300: Rise of An Empire 12979.38 30538.70  Action    Yes
# 2   37                        Dumb and Dumber To 11449.52 27041.41  Comedy    Yes
# 3   17                How to Train Your Dragon 2 11627.40 41472.10    Kids    Yes
# 4    6 The Hobbit: The Battle of the Five Armies 14122.41 65836.54 Fantasy    Yes
# 5   47                        The Purge: Anarchy 10629.83 25197.06  Horror    Yes
# 6   49                      Think Like a Man Too 13142.43 29295.36  Comedy    Yes
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2
?summarise
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarise(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
summarize(AverageRank = mean(Rank), NumberOfMovies = n() )
summarize(C3,AverageRank = mean(Rank), NumberOfMovies = n() )
summarise(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
library(plyr)
summarise(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
# Genre AverageRank NumberOfMovies
summarise(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
library(plyr)
summarise(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
summarize(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
library(dplyr)
summarize(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
summarize(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
setwd("C:/Users/dan_9/Desktop/DSO 545/MIDTERM")
library(ggplot2)
library(dplyr)
summarize(C3, AverageRank = mean(Rank), NumberOfMovies = n() )
setwd("C:/Users/dan_9/Desktop/DSO 545/MIDTERM")
library(ggplot2)
library(dplyr)
library(plyr)
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
C3 = read.csv("Case_03.csv")
glimpse(C3)
# Q1
Q1 = C3 %>% filter(Sequel == "Yes" & Opening > 10000 & Opening < 15000 )
Q1
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
setwd("C:/Users/dan_9/Desktop/DSO 545/MIDTERM")
library(ggplot2)
library(dplyr)
library(plyr)
C3 = read.csv("Case_03.csv")
glimpse(C3)
Q1 = C3 %>% filter(Sequel == "Yes" & Opening > 10000 & Opening < 15000 )
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
setwd("C:/Users/dan_9/Desktop/DSO 545/MIDTERM")
library(ggplot2)
library(dplyr)
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
C3 = read.csv("Case_03.csv")
glimpse(C3)
# Q1
Q1 = C3 %>% filter(Sequel == "Yes" & Opening > 10000 & Opening < 15000 )
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank), NumberOfMovies = n() ) %>%
arrange(desc(AverageRank))
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank) ) %>%
arrange(desc(AverageRank))
Q2
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank) ) %>%
arrange(desc(AverageRank))
Q2
Q2 = C3 %>% group_by(Genre)
Q2
Q2 = C3 %>% group_by(Genre) %>%
summarize(AverageRank = mean(Rank) )
Q2
